c
Restaurant.order(:id).limit(@remainder_size).offset(ENV['RESTAURANT_PAGINATION_SIZE'].to_i)
c
ENV['RESTAURANT_PAGINATION_SIZE'].to_i + @remainder_size
ENV['RESTAURANT_PAGINATION_SIZE'].to_i
c
ENV['RESTAURANT_PAGINATION_SIZE'].to_f
ENV['RESTAURANT_PAGINATION_SIZE']
        debugger
c
exit
ENV
exit
Rails.env
Rails.application.env
Rails.application.secrets
ENV['MENU_ITEM_PAGINATION_SIZE']
ENV['RESTAURANT_PAGINATION_SIZE']
ENV
exit
params[:page].blank?
c
restaurants_arr.length
c
@restaurants = Restaurant.order(:id).limit(@limit).offset(@RESTAURANT_PAGINATION_SIZE * @page_index).size
@restaurants = Restaurant.order(:id).limit(@limit).offset(@RESTAURANT_PAGINATION_SIZE * @page_index)
@limit = @RESTAURANT_PAGINATION_SIZE
@page_index = params[:page] - 1
(params[:page] - 1) > @last_possible_page_index
params[:page].blank? || params[:page] < 0
c
@page
@RESTAURANT_PAGINATION_SIZE
@restaurants = Restaurant.order(:id).limit(@limit).offset(@RESTAURANT_PAGINATION_SIZE * @page_index).count
@restaurants = Restaurant.order(:id).limit(@limit).offset(@RESTAURANT_PAGINATION_SIZE * @page_index)
c
JSON.parse(response.body)
c
Restaurant.count
@last_possible_page_index
@page_index == 0
@page_index >= @last_possible_page_index
@limit = Restaurant.count % @RESTAURANT_PAGINATION_SIZE
@page_index = @last_possible_page_index
@page_index
c
JSON.parse(response.body)
              expect(restaurants_arr.length).to eq @remainder_size
response.status
response
restaurants_arr
c
              end
                json
                json['rating'] = r.rating.to_s
                json = JSON.parse(r.to_json).slice('id' , 'name', 'description', 'rating', 'address')
              restaurants_arr = Restaurant.order(:id).limit(@remainder_size).offset(@RESTAURANT_PAGINATION_SIZE).map do |r|
              end
                json
                json['rating'] = r.rating.to_s
                json = JSON.parse(r.to_json).slice('id' , 'name', 'description', 'rating', 'address')
              restaurants_arr = Restaurant.order(:id).limit(@remainder_size).offset(@RESTAURANT_PAGINATION_SIZE).map do |r|
Restaurant.order(:id).ids
c
Restaurant.count
c
ApiKey.find_by_guid( api_key)
c
ApiKey.find_by(guid: api_key)
c
cc
c
ApiKey.find_by(guid: api_key)
c
Restaurant.order(:id).limit(@limit).offset(@RESTAURANT_PAGINATION_SIZE * (@page - 1) )
c
@RESTAURANT_PAGINATION_SIZE * @page
 @restaurants = Restaurant.order(:id).limit(@limit).offset(@RESTAURANT_PAGINATION_SIZE * @page)
   44:
@RESTAURANT_PAGINATION_SIZE * @page)
@limit
c
@limit
c
JSON.parse(response.body)['restaurants'].size
JSON.parse(response.body)['restaurants']
JSON.parse(response.body)
c
@page
@RESTAURANT_PAGINATION_SIZE
@RESTAURANT_PAGINATION_SIZE * @page
c
@RESTAURANT_PAGINATION_SIZE * @page
c
@page
@RESTAURANT_PAGINATION_SIZE * @page
@limit
Restaurant.count
Restaurant.size
Restaurant.order(:id).limit(@limit).offset(@RESTAURANT_PAGINATION_SIZE * @page)
params
c
restaurants_arr.length
response.body
c
              # JSON.parse(response.body).length
c
JSON.parse(response.body)['restaurants'].length
JSON.parse(response.body)
JSON.parse(response.body).map{|a| puts a}
JSON.parse(response.body).map{|a| puts a['id']}
restaurants_arr.map{|a| puts a['id']}
restaurants_arr.map{|a| puts a}
restaurants_arr.map{|a| a.id}
restaurants_arr.map(&:id)
restaurants_arr
restaurants_arr.ids
c
JSON.parse(response.body).length
restaurants_arr.length
c
Restaurant.order(:id).limit(@RESTAURANT_PAGINATION_SIZE).offset(@RESTAURANT_PAGINATION_SIZE)
Restaurant.order(:id).offset(@RESTAURANT_PAGINATION_SIZE).limit(@RESTAURANT_PAGINATION_SIZE).ids
Restaurant.order(:id).offset(@RESTAURANT_PAGINATION_SIZE).limit(@RESTAURANT_PAGINATION_SIZE)
c
restaurants_arr.length
restaurants_arr.first
restaurants_arr
c
Restaurant.count
c
            JSON.parse(r.to_json).slice('id' , 'name', 'description', 'rating', 'address')
JSON.parse(r.to_json).slice(:id , :name, :description, :rating, :address)
JSON.parse(r.to_json)
JSON.parse(r)
r.to_s
r.to_hash
r.to_json
r
c
restaurants_arr
c
JSON.parse(body)['restaurants']
JSON.parse(body).restaurants
JSON.parse(body)
body
JSON.parse(response.body)
response.body.to_json
response.body
response
c
restaurant
json
@restaurants
restaurant
 restaurant
c
@restaurants
c
@restaurants = Restaurant.order(:id).limit(@RESTAURANT_PAGINATION_SIZE).offset(@RESTAURANT_PAGINATION_SIZE * @page)
@RESTAURANT_PAGINATION_SIZE
@page
c
@restaurants
c
end
  json.(:id , :name, :description, :rating, :address)
json.restaurants @restaurants do
c
Rails.application.routes.methods true
Rails.application.routes.methods false
Rails.application.routes
  include Rails.application.routes.url_helpers
snappea_api
snappea_api_url
snappea_api_path
snappea_api_url
c
request.host
request
snappea_api
snappea_api_path
snappea_api_url
@restaurants.first
@restaurants
c
@restaruants.first
@restaruants.class
@restaruants.clas
@restaruants
@restaurants
@restaurants.first
restaurant_path(@restaurants.first)
@restaruants
c
@restaruants
c
@restaurants
list
@restaurants.first
@restaurants
restaurant_path(@restaurants.first)
restaruant_path(@restaurants.first)
@restaurants.first.url
Rails.application.domain
Rails.application
Rails.app
Rails
c
@restaruants
c
(Restaurant.count / @RESTAURANT_PAGINATION_SIZE.to_f).ceil 
(Restaurant.count / @RESTAURANT_PAGINATION_SIZE.to_f) 
@RESTAURANT_PAGINATION_SIZE = 7
(Restaurant.count / @RESTAURANT_PAGINATION_SIZE.to_f) 
Restaurant.count / 7
Restaurant.count
Restaurant
Restaurant.count / @RESTAURANT_PAGINATION_SIZE
@page = 1
self
url
domain
@restaruants = Restaurant.order(:id).limit(RESTAURANT_PAGINATION_SIZE).offset(RESTAURANT_PAGINATION_SIZE * page).ids
page = 0
@restaruants = Restaurant.order(:id).limit(RESTAURANT_PAGINATION_SIZE).offset(RESTAURANT_PAGINATION_SIZE * page).ids
@restaruants = Restaurant.order(:id).limit(RESTAURANT_PAGINATION_SIZE).offset(RESTAURANT_PAGINATION_SIZE * page)
page = 1
@restaruants = Restaurant.order(:id).limit(RESTAURANT_PAGINATION_SIZE).offset(RESTAURANT_PAGINATION_SIZE * page).length
@restaruants = Restaurant.order(:id).limit(RESTAURANT_PAGINATION_SIZE).offset(RESTAURANT_PAGINATION_SIZE * page)
page = 0
@restaruants = Restaurant.order(:id).limit(RESTAURANT_PAGINATION_SIZE).offset(RESTAURANT_PAGINATION_SIZE * page)
@restaruants = Restaurant.order_by(:id).limit(RESTAURANT_PAGINATION_SIZE).offset(RESTAURANT_PAGINATION_SIZE * page)
        @restaruants = Restaurant.order_by(:id).limit(RESTAURANT_PAGINATION_SIZE).offset(RESTAURANT_PAGINATION_SIZE * page)] )
        RESTAURANT_PAGINATION_SIZE = 10
        @restaruants = Restaurant.order_by(:id).limit(RESTAURANT_PAGINATION_SIZE).offset(RESTAURANT_PAGINATION_SIZE * page)] )
@restaurants
c
Restaurant.first
 Restaurant.count
((page + 1) * 15)
page
@restaruants
c
@restaurants
c
@restaurants
c
@restaurants.first
Restaurant.find([15...15555])
Restaurant.find_by([15...15555])
@restaurants
@restraunts
c
json.index
json
