c
FactoryGirl.build(:restaurant, rating: 1).valid?
FactoryGirl.build(:restaurant, rating: 1)
FactoryGirl.build(:restaurant, rating: 0)
FactoryGirl.build(:restaurant, rating: 0).valid?
rating
rating.to_s.match(/^\d{1}.\d{1}$/)
c
('1.2').to_s.match(/^\d{1}.\d{1}$/)
rating.to_s.match(/^\d{1}.\d{1}$/)
rating.to_s.match(/\d{1}.\d{1}/)
rating.to_f
rating
(0..5).include?(5.32)
(0..5).include?(4.32)
(0.0..5.0).include?(4.32)
(0.0..5.0).include?(5.01)
(0.0..5.0).include?(5.1)
(0.0..5.0).include?(55)
(0.0..5.0).include?(1.2)
rating.to_f <= 5
0 <= rating.to_f
c
rating
rating.to_f
c
rating.to_f
rating
rating.to_s.match(/\d{1}.\d{1}/)
c
rating.to_f <= 5 && rating.to_s.match(/\d.\d/)
rating.to_f
rating
c
rating.to_f
rating
c
rating
c
rating
c
rating
c
rating
c
rating.to_s.match(/\d.\d/)
rating.to_s.match(/\d.\d/
rating.to_s
 rating
valid?
rating
rating = 0
rating.to_f
rating
rating.to_f
c
rating.to_s.match(/\d.\d/)
rating.to_s.match(/\D.\D/)
rating.to_f <= 5
rating
c
a.validate!
a.validate
a.valid?
c
a.rating.to_s
a.rating.to_f
a.errors
a.valid?
a
c
a
c
reload
reload!
a.rating.to_f
a = Restaurant.create(name: 'burder', rating: 1.2, address: 'here', description: 'desc here')
Restaurant.create(name: 'burder', rating: 1.2, address: 'here', description: 'desc here')
a.errors
a.valid
a.valid?
a = FactoryGirl.build(:restaurant, rating: (rand(50) / 10.0 ).to_f )
(rand(50) / 10.0).to_f
a.rating.to_f
a.rating.to_i
a.rating.to_s
a.rating
a = FactoryGirl.build(:restaurant, rating: rand(50) / 10.0 )
rand(50) / 10.0 
(1.2).class
(rand(50) / 10.0).class
(rand(50) / 10.0).clas
rand(50) / 10.0
a = FactoryGirl.build(:restaurant)
a = FactoryGirl.build(:restaurant).rating
FactoryGirl.build(:restaurant).rating
FactoryGirl.create(:restaurant).rating
expect(FactoryGirl.create(:restaurant)).to be_valid
